version: "3.8"

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: bakery
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - bakery_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d bakery"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:alpine
    networks:
      - bakery_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://user:password@db/bakery
      - REDIS_URL=redis://redis:6379
    networks:
      - bakery_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - bakery_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 300M

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
    networks:
      - bakery_net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M

  worker:
    build: 
      context: ./worker
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - bakery_net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 300M

volumes:
  db_data:

networks:
  bakery_net:
    driver: bridge
